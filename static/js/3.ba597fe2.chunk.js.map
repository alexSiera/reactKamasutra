{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainerWithHooks.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","statusInput","setStatus","useEffect","toggleEditMode","updateUserStatus","onDoubleClick","className","s","profileInfoInput","autoFocus","onChange","e","target","value","onBlur","ProfileInfo","profileData","src","photos","large","avatar","imgMain","descriptionBlock","fullName","aboutMe","Preloader","Post","message","name","item","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","onSubmit","Field","component","Textarea","placeholder","validate","required","MyPosts","React","memo","posts","addPost","postsElements","map","p","key","id","likesCount","postsBlock","postsBlockText","formData","textbox","connect","state","profilePage","Profile","MyPostsContainer","compose","auth","autorizedUid","userId","isAuth","getUserProfile","getUserProfileThunkCreator","getUserStatus","getUserStatusThunkCreator","updateStatusThunkCreator","withRouter","parseInt","match","params","history","push"],"mappings":"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","file":"static/js/3.ba597fe2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gOOQY\",\"imgMain\":\"ProfileInfo_imgMain__19Z2q\",\"profileInfoInput\":\"ProfileInfo_profileInfoInput__3YmSw\",\"aboutMe\":\"ProfileInfo_aboutMe__1JWq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cAL4\",\"postsBlockText\":\"MyPosts_postsBlockText__3e_AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.scss';\n\nconst ProfileStatusWithHooks = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [statusInput, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n    const toggleEditMode = () => {\n        if(!editMode) {\n            setEditMode(true);\n        }\n        else {\n            setEditMode(false);\n            props.updateUserStatus(statusInput);\n        }\n    };\n    const updateLocalStatus = (e) => {\n        setStatus(e.target.value)\n    };\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={toggleEditMode}>Status: {props.status}</span>\n            </div>\n            }\n            {editMode &&\n            <div className={s.profileInfoInput}>\n                <input autoFocus onChange={updateLocalStatus} onBlur={toggleEditMode} value={statusInput}/>\n            </div>\n            }\n        </div>\n    )\n};\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './ProfileInfo.module.scss';\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport avatar from '../../../assets/images/maleAvatar.jpg';\nconst ProfileInfo = ({profileData, updateUserStatus, status}) => {\n    if(!profileData) return <Preloader/>;\n    return (\n        <div>\n            <h2>Profile Info</h2>\n            <div>\n                <img src={profileData.photos.large ? profileData.photos.large : avatar} className={s.imgMain} />\n            </div>\n            <div className={s.descriptionBlock}>\n                <div>\n                    Profile name: {profileData.fullName ? profileData.fullName : \"\"}\n                </div>\n                <div className={s.aboutMe}>\n                    Description: {profileData.aboutMe ? profileData.aboutMe : \"\"}\n                </div>\n                <div>\n                    <ProfileStatusWithHooks status={status} updateUserStatus={updateUserStatus}/>\n                </div>\n                    {/* <img src=\"https://www.thoughtco.com/thmb/JhuPr0_SbnnIXiTm1PrQ5nfjdvQ=/768x0/filters:no_upscale():max_bytes(150000):strip_icc()/acat-874e4928f96e4e96bec0b1723ca5a909.jpg\" /> */}\n                {/*{profileData.fullName}*/}\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","import React from \"react\";\nimport s from \"./Post.module.scss\";\nconst Post = ({message,name}) => {\n  return (\n        <div className={s.item}>\n          <img src=\"https://f0.pngfuel.com/png/439/19/avatar-user-profile-icon-women-wear-frock-png-clip-art.png\" />\n          {name} - {message}\n          <div>\n            <span> like</span>\n            <span> dislike</span>\n          </div>\n        </div>\n  );\n};\nexport default Post;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport {maxLengthCreator, required} from \"../../../../utils/validators/valiadators\";\nimport {Textarea} from \"../../../Common/FormsControls/FormsControls\";\nconst maxLength10 = maxLengthCreator(10);\nconst MyPostsForm = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field component={Textarea} placeholder=\"Please Enter New Post\" name=\"textbox\" validate={[required, maxLength10]}/>\n            <div>\n                <button>Send Post</button>\n            </div>\n        </form>\n        )\n};\nexport default reduxForm({\n    form: 'mypost'\n})(MyPostsForm);","import React from 'react';\nimport s from './MyPosts.module.scss';\nimport Post from './Post/Post';\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\nconst MyPosts = React.memo(({posts,addPost }) => {\n    const postsElements = posts.map((p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />))\n    const onAddPost = (formData) => {\n        addPost(formData.textbox);\n    }\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <div className={s.postsBlockText}>\n                <MyPostsForm onSubmit={onAddPost} />\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\nexport default MyPosts;","import React from 'react';\nimport {addPostAC as addPost} from \"../../../Redux/reducers/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => state.profilePage;\n\nexport default connect(mapStateToProps, {\n    addPost,\n})(MyPosts);","import React from 'react';\nimport s from './Profile.module.scss';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profileData={props.profileData} updateUserStatus={props.updateUserStatus} status={props.status}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\nexport default Profile;","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport {\n    getUserProfileThunkCreator,\n    getUserStatusThunkCreator,\n    updateStatusThunkCreator\n} from \"../../Redux/reducers/profileReducer\";\n// import {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\nconst ProfileContainerWithHooks = (props) => {\n    useEffect(() => {\n        let userId = parseInt(props.match.params.userId);\n        if(!userId ) {\n            userId = props.autorizedUid;\n            if(!userId) {\n                props.history.push(\"/login\");\n            }\n        }\n        props.getUserProfile(userId);\n        props.getUserStatus(userId);\n    }, []);\n        return (\n            <Profile {...props} />\n        )\n}\nconst mapStateToProps = ({profilePage, auth}) => {\n    return {\n        profileData: profilePage.profileData,\n        status: profilePage.status,\n        autorizedUid: auth.userId,\n        isAuth: auth.isAuth\n    }\n}\nexport default compose(\n    connect(mapStateToProps, {getUserProfile: getUserProfileThunkCreator, getUserStatus: getUserStatusThunkCreator, updateUserStatus: updateStatusThunkCreator}),\n    withRouter,\n    //withAuthRedirect\n)(ProfileContainerWithHooks);"],"sourceRoot":""}