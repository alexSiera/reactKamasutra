{"version":3,"sources":["components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","Redux/selectors/profileSelectors.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","statusInput","setStatus","useEffect","toggleEditMode","isOwner","updateUserStatus","className","s","profileStatusBlock","onDoubleClick","profileInfoInput","autoFocus","onChange","e","target","value","onBlur","ContactsData","contactTitle","contactValue","contactsData","ProfileData","profileData","goToEditMode","descriptionBlock","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","c","key","reduxForm","form","handleSubmit","error","console","log","profileDataForm","onSubmit","formDataItems","formDataItemsInput","createField","Input","type","Textarea","contact","formSubmitBtn","style","formSummaryError","ProfileInfo","savePhoto","saveProfileData","profileUpdateStatusSuccess","Preloader","onMainPhotoSelected","files","length","file","profileAvatar","src","photos","large","avatar","imgMain","photosInputContainer","photosInput","accept","htmlFor","initialValues","profileFormData","then","catch","Post","message","name","item","maxLength10","maxLengthCreator","Field","component","placeholder","validate","required","MyPosts","React","memo","posts","addPost","postsElements","p","id","likesCount","postsBlock","postsBlockText","formData","textbox","connect","state","profilePage","Profile","MyPostsContainer","getProfileData","getStatus","getProfileUpdateStatus","compose","auth","autorizedUid","getUserId","isAuth","getIsAuth","getUserProfile","getUserProfileThunkCreator","getUserStatus","getUserStatusThunkCreator","updateStatusThunkCreator","savePhotoThunkCreator","saveProfileDataThunkCreator","withRouter","userId","parseInt","match","params","history","push","refreshProfile"],"mappings":"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","file":"static/js/3.a61a08ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileData_descriptionBlock__288Yv\",\"imgMain\":\"ProfileData_imgMain__1pM71\",\"profileInfoInput\":\"ProfileData_profileInfoInput__3oTjc\",\"aboutMe\":\"ProfileData_aboutMe__2N6eR\",\"contactsLists\":\"ProfileData_contactsLists__1g-7y\",\"contactsHeading\":\"ProfileData_contactsHeading__1EFvO\",\"contactsData\":\"ProfileData_contactsData__1snxD\",\"formSubmitBtn\":\"ProfileData_formSubmitBtn__RrZEn\",\"profileDataForm\":\"ProfileData_profileDataForm__1jfoB\",\"formDataItems\":\"ProfileData_formDataItems__24CZ1\",\"formDataItemsInput\":\"ProfileData_formDataItemsInput__wM59Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__TnwUI\",\"imgMain\":\"ProfileInfo_imgMain__2UPsX\",\"profileInfoInput\":\"ProfileInfo_profileInfoInput__3flx5\",\"aboutMe\":\"ProfileInfo_aboutMe__1OiYl\",\"profileAvatar\":\"ProfileInfo_profileAvatar__37bfm\",\"photosInputContainer\":\"ProfileInfo_photosInputContainer__2Cvgp\",\"photosInput\":\"ProfileInfo_photosInput__1r06e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileStatus_descriptionBlock__ifCwp\",\"profileStatusBlock\":\"ProfileStatus_profileStatusBlock__3wALF\",\"imgMain\":\"ProfileStatus_imgMain__3Ifja\",\"profileInfoInput\":\"ProfileStatus_profileInfoInput__1qGJO\",\"aboutMe\":\"ProfileStatus_aboutMe__38k3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3BnzY\",\"postsBlockText\":\"MyPosts_postsBlockText__2EBiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3uFWa\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileStatus.module.scss';\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [statusInput, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n    const toggleEditMode = () => {\r\n        if(!props.isOwner) return;\r\n        if(!editMode) {\r\n            setEditMode(true);\r\n        }\r\n        else {\r\n            setEditMode(false);\r\n            props.updateUserStatus(statusInput);\r\n        }\r\n    };\r\n    const updateLocalStatus = (e) => {\r\n        setStatus(e.target.value)\r\n    };\r\n    return (\r\n        <div className={s.profileStatusBlock}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={toggleEditMode}><b>Status:</b> {props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div className={s.profileInfoInput}>\r\n                <input autoFocus onChange={updateLocalStatus} onBlur={toggleEditMode} value={statusInput}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileData.module.scss';\r\n\r\nconst ProfileData = ({profileData, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div className={s.descriptionBlock}>\r\n            <h2>Profile Info</h2>\r\n            {isOwner && <div>\r\n                <button onClick={goToEditMode}>Edit information</button>\r\n            </div>}\r\n\r\n            <div>\r\n                <div>\r\n                    <b>Full name:</b> {profileData.fullName ? profileData.fullName : \"No info\"}\r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                    <b>About me:</b> {profileData.aboutMe ? profileData.aboutMe : \"No info\"}\r\n                </div>\r\n                {profileData.lookingForAJob &&\r\n                <div className={s.aboutMe}>\r\n                    <div className={s.aboutMe}>\r\n                        <b>Job status:</b> Yes I'am looking for a job.\r\n                    </div>\r\n                    <b>My professional skills:</b>\r\n                    {\r\n                        profileData.lookingForAJobDescription ? profileData.lookingForAJobDescription : \"No one\"\r\n                    }\r\n                </div>\r\n                }\r\n                {!profileData.lookingForAJob &&\r\n                <div className={s.aboutMe}>\r\n                    <b>Job status:</b> I'am not looking for a job right now.\r\n                </div>\r\n                }\r\n                <div>\r\n                    <b>Contacts: {Object.keys(profileData.contacts)\r\n                        .map((c => {\r\n                            return <ContactsData key={c} contactTitle={c} contactValue={profileData.contacts[c]}/>\r\n                        }))}\r\n                    </b>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\nconst ContactsData = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contactsData}><b>{contactTitle}</b>: {contactValue}</div>\r\n    )\r\n};\r\nexport default ProfileData;","import React from 'react';\r\nimport s from './ProfileData.module.scss';\r\nimport {createField, Input, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from 'redux-form';\r\nimport style from \"../../../Common/FormsControls/FormControls.module.scss\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, error, profileData}) => {\r\n    console.log(error);\r\n    return (\r\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\r\n            {error}\r\n            <h4>Profile Data Form</h4>\r\n\r\n            <div className={s.formDataItems}>\r\n                <label><b>Full name:</b> </label>\r\n                <div className={s.formDataItemsInput}>\r\n                    {createField(\"Enter full name\", \"fullName\", [], Input, {type: \"text\"})}\r\n                </div>\r\n            </div>\r\n            <div className={s.formDataItems}>\r\n                <label><b>About me:</b> </label>\r\n                <div className={s.formDataItemsInput}>\r\n                    {createField(\"Enter about me info\", \"aboutMe\", [], Input, {type: \"text\"})}\r\n                </div>\r\n            </div>\r\n            <div className={s.formDataItems}>\r\n                <label><b>Skills:</b> </label>\r\n                <div className={s.formDataItemsInput}>\r\n                    {createField(\"Enter you skills\", \"lookingForAJobDescription\", [], Textarea, {type: \"text\"})}\r\n                </div>\r\n            </div>\r\n            <div className={s.formDataItems}>\r\n                <label><b>Are you looking for a job ?</b> </label>\r\n                <div className={s.formDataItemsInput}>\r\n                    {createField(\"Enter job status\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <b>Contacts: {Object.keys(profileData.contacts)\r\n                    .map((key => {\r\n                        return <div key={key} className={s.contact}>\r\n                            <b>{key}:</b> <span>{createField(key, `contacts[${key}]`, [], Input)}</span>\r\n                        </div>\r\n                    }))}\r\n                </b>\r\n            </div>\r\n            <div className={s.formSubmitBtn}>\r\n                <button>Save profile data</button>\r\n            </div>\r\n            <div>\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\nexport default reduxForm({\r\n    form: 'edit-profile'\r\n})(ProfileDataForm);","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.scss';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\r\nimport avatar from \"../../../assets/images/maleAvatar.jpg\";\r\n\r\nconst ProfileInfo = ({profileData, updateUserStatus, status, isOwner, savePhoto, saveProfileData ,profileUpdateStatusSuccess}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    if (!profileData) return <Preloader/>;\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            const file = e.target.files[0];\r\n            savePhoto(file);\r\n        }\r\n    };\r\n    const onProfileDataFormSubmit = (profileFormData) => {\r\n            saveProfileData(profileFormData).then(() => {\r\n                setEditMode(false);\r\n            }).catch(e => console.log(e));\r\n    };\r\n    return (\r\n        <div>\r\n            <div className={s.profileAvatar}>\r\n                <img src={profileData.photos.large ? profileData.photos.large : avatar} className={s.imgMain}/>\r\n                {isOwner &&\r\n                <span className={s.photosInputContainer}>\r\n                    <input className={s.photosInput} type=\"file\" onChange={onMainPhotoSelected} accept=\"image/*\"/>\r\n                    <label htmlFor=\"file\">Update photo</label>\r\n\r\n                </span>}\r\n            </div>\r\n            {editMode && <ProfileDataForm initialValues={profileData} onSubmit={onProfileDataFormSubmit} savePhoto={onMainPhotoSelected}\r\n                                          profileData={profileData}/>}\r\n            {!editMode &&\r\n            <ProfileData profileData={profileData} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n\r\n            <ProfileStatus isOwner={isOwner} status={status} updateUserStatus={updateUserStatus}/>\r\n        </div>\r\n    )\r\n};\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.scss\";\r\nconst Post = ({message,name}) => {\r\n  return (\r\n        <div className={s.item}>\r\n          <img src=\"https://f0.pngfuel.com/png/439/19/avatar-user-profile-icon-women-wear-frock-png-clip-art.png\" />\r\n          {name} - {message}\r\n          <div>\r\n            <span> like</span>\r\n            <span> dislike</span>\r\n          </div>\r\n        </div>\r\n  );\r\n};\r\nexport default Post;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/valiadators\";\r\nimport {Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPostsForm = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field component={Textarea} placeholder=\"Please Enter New Post\" name=\"textbox\" validate={[required, maxLength10]}/>\r\n            <div>\r\n                <button>Send Post</button>\r\n            </div>\r\n        </form>\r\n        )\r\n};\r\nexport default reduxForm({\r\n    form: 'mypost'\r\n})(MyPostsForm);","import React from 'react';\r\nimport s from './MyPosts.module.scss';\r\nimport Post from './Post/Post';\r\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\r\nconst MyPosts = React.memo(({posts,addPost }) => {\r\n    const postsElements = posts.map((p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />))\r\n    const onAddPost = (formData) => {\r\n        addPost(formData.textbox);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <div className={s.postsBlockText}>\r\n                <MyPostsForm onSubmit={onAddPost} />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC as addPost} from \"../../../Redux/reducers/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => state.profilePage;\r\n\r\nexport default connect(mapStateToProps, {\r\n    addPost,\r\n})(MyPosts);","import React from 'react';\r\nimport s from './Profile.module.scss';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profileUpdateStatusSuccess={props.profileUpdateStatusSuccess} saveProfileData={props.saveProfileData} savePhoto={props.savePhoto} isOwner={props.isOwner} profileData={props.profileData} updateUserStatus={props.updateUserStatus} status={props.status}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","export const getProfileData = (profilePage) => {\r\n    return profilePage.profileData;\r\n};\r\nexport const getStatus = (profilePage) => {\r\n    return profilePage.status;\r\n};\r\nexport const getProfileUpdateStatus= (profilePage) => {\r\n    return profilePage.profileUpdateStatusSuccess;\r\n}","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {\r\n    getUserProfileThunkCreator,\r\n    getUserStatusThunkCreator, savePhotoThunkCreator, saveProfileDataThunkCreator,\r\n    updateStatusThunkCreator\r\n} from \"../../Redux/reducers/profileReducer\";\r\nimport {compose} from \"redux\";\r\nimport {getProfileData, getProfileUpdateStatus, getStatus} from \"../../Redux/selectors/profileSelectors\";\r\nimport {getIsAuth, getUserId} from \"../../Redux/selectors/authSelectors\";\r\n\r\nconst ProfileContainer = (props) => {\r\n    const refreshProfile = () => {\r\n        let userId = parseInt(props.match.params.userId);\r\n        if (!userId) {\r\n            userId = props.autorizedUid;\r\n            if (!userId) {\r\n                props.history.push(\"/login\");\r\n            }\r\n        }\r\n        props.getUserProfile(userId);\r\n        props.getUserStatus(userId);\r\n    };\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [props.match.params.userId]);\r\n    return (\r\n        <Profile {...props} profileUpdateStatusSuccess={props.profileUpdateStatusSuccess} isOwner={!props.match.params.userId} savePhoto={props.savePhoto} saveProfileData={props.saveProfileData} />\r\n    )\r\n}\r\nconst mapStateToProps = ({profilePage, auth}) => {\r\n    return {\r\n        profileData: getProfileData(profilePage),\r\n        status: getStatus(profilePage),\r\n        profileUpdateStatusSuccess: getProfileUpdateStatus(profilePage),\r\n        autorizedUid: getUserId(auth),\r\n        isAuth: getIsAuth(auth),\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile: getUserProfileThunkCreator,\r\n        getUserStatus: getUserStatusThunkCreator,\r\n        updateUserStatus: updateStatusThunkCreator,\r\n        savePhoto: savePhotoThunkCreator,\r\n        saveProfileData: saveProfileDataThunkCreator\r\n    }),\r\n    withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}