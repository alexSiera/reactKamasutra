{"version":3,"sources":["Redux/reducers/newsReducer.ts","api/api.ts","assets/images/maleAvatar.jpg","assets/images/preloader.svg","components/Navbar/Navbar.module.scss","components/Login/Login.module.scss","components/Common/FormsControls/FormsControls.tsx","Redux/reducers/sidebarReducer.ts","utils/objectHelpers.js","Redux/reducers/usersReducer.ts","Redux/reducers/authReducer.ts","Redux/reducers/appReducer.ts","Redux/reduxStore.ts","components/Common/Pagination/Pagination.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","Redux/selectors/usersSelectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginForm/LoginForm.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","components/Navbar/Sidebar/Sidebar-item/SidebarItem.jsx","components/Navbar/Sidebar/Sidebar.jsx","components/Navbar/Sidebar/SidebarContainer.jsx","components/Navbar/Navbar.jsx","HOC/withSuspense.js","components/NotFound/NotFound.jsx","App.tsx","Redux/selectors/appSelectors.js","serviceWorker.js","index.tsx","components/Common/Preloader/Preloader.tsx","Redux/selectors/authSelectors.js","components/Common/Pagination/Pagination.module.scss","components/Users/User/User.module.scss","utils/validators/valiadators.ts","components/Common/FormsControls/FormControls.module.scss","components/Navbar/Sidebar/Sidebar.module.scss","components/Header/Header.module.scss","components/Login/LoginForm/LoginForm.module.scss","components/Navbar/Sidebar/Sidebar-item/SidebarItem.module.scss","Redux/reducers/profileReducer.ts","Redux/reducers/dialogsReducer.ts"],"names":["initialState","newsData","id","img","author","message","actions","addNewsAC","newNewsText","type","newsReducer","state","action","newNews","Math","floor","random","ResultCodesEnum","ResultCodeForCaptcha","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","a","pageNumber","pageSize","get","res","data","console","log","subscribe","userId","post","subscribeStatus","resultCode","unSubscribe","delete","profileAPI","getUserProfile","profile","getStatus","userStatus","updateStatus","newStatus","put","status","savePhoto","photoFile","formData","FormData","append","saveProfileData","profileData","authAPI","getAuthMe","response","login","email","password","rememberMe","captcha","logOut","securityAPI","getCaptcha","module","exports","FormControl","meta","touched","error","children","isError","className","s","formControl","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","i","users","totalUsersCount","currentSelectedPage","isFetching","followingInProgress","followAC","unfollowAC","setUsersAC","selectPageAC","pageNum","setTotalUsersCountAC","usersCount","toggleFetchingAC","fetching","toggleFollowingProgressAC","_followUnfollowFlow","dispatch","apiMethod","actionCreator","statusCode","userReducer","followed","filter","isAuth","captchaUrl","payload","captchaImg","authMeThunkCreator","authData","Object","keys","length","Success","Error","loginMeThunkCreator","CaptchaIsRequired","getAndSetCaptchaImage","messages","stopSubmit","_error","url","authReducer","initialized","appReducer","rootReducer","combineReducers","dialogsPage","dialogsReducer","newsPage","profilePage","profileReducer","sidebarData","usersPage","usersReducer","auth","form","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","PaginationElement","onPageChanged","key","onClick","cn","selectedPage","Pagination","totalItemsCount","portionSize","pagesCount","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginationBlock","paginator","p","User","photos","usersContainer","usersContainerItemRight","usersContainerItemLeft","to","usersAvatarImg","src","small","userPhoto","alt","disabled","some","Users","u","getUsersSelector","getPageSize","getTotalUsersCount","getCurrentSelectedPage","getIsFetching","getFollowingInProgress","usersContainers","createSelector","connect","page","getState","totalCount","follow","bind","unfollow","useEffect","pageTitle","Preloader","Header","header","loginBlock","getIsAuth","reduxForm","handleSubmit","onSubmit","formContainer","required","undefined","formSummaryError","Login","loginMe","formMainHeading","getCaptchaUrl","SidebarItem","sideBarList","sideBarImg","Sidebar","sidebarMainHeading","sidebarItemsContainer","el","SidebarContainer","Navbar","nav","item","activeClassName","active","WithSuspense","Component","fallback","NotFound","DialogsContainer","lazy","NewsContainer","ProfileContainer","Settings","Music","AppContainer","compose","withRouter","initializeApp","catchAllUnhandledErrors","promiseRejectectionEvent","alert","window","addEventListener","removeEventListener","path","render","from","exact","SamuraiJSApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","preloader","getUserId","value","maxLengthCreator","maxLength","posts","likesCount","profileUpdateStatusSuccess","addPostAC","newPost","setProfileAC","setUserStatusAC","savePhotoSuccess","deletePostAC","getUserProfileThunkCreator","getUserStatusThunkCreator","updateStatusThunkCreator","serverStatus","savePhotoThunkCreator","file","saveProfileDataThunkCreator","Promise","reject","newProfile","messagesData","dialogsData","addDialogAC","newMessage","newDialog"],"mappings":"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","file":"static/js/main.ccf40a44.chunk.js","sourcesContent":["import { InferActionsTypes } from '../reduxStore';\n\nconst initialState = {\n    newsData: [\n        {\n            id: 1131,\n            img:\n                'https://images.unsplash.com/photo-1504711434969-e33886168f5c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            author: 'Andrew',\n            message:\n                'BBC News provides trusted World and UK news as well as local and regional perspectives. ... The latest global news, sport, weather and documentaries.',\n        },\n        {\n            id: 2456,\n            img:\n                'https://images.unsplash.com/photo-1495020689067-958852a7765e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            author: 'Nike',\n            message:\n                'View the latest news and breaking news today for U.S., world, weather, entertainment, politics and health at CNN.com.',\n        },\n        {\n            id: 343,\n            img:\n                'https://images.unsplash.com/photo-1476242906366-d8eb64c2f661?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            author: 'Micle',\n            message:\n                'Latest breaking news, including politics, crime and celebrity. Find stories, updates and expert opinion.',\n        },\n    ] as Array<NewsData>,\n};\ntype NewsData = {\n    id: number;\n    img: string;\n    author: string;\n    message: string;\n};\nexport type InitialStateType = typeof initialState;\nconst newsReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'ADD_NEWS':\n            const newNews = {\n                id: Math.floor(Math.random() * 100),\n                img: 'http://ldfl.ru/wp-content/uploads/2017/09/news.jpg',\n                author: 'Someone',\n                message: action.newNewsText,\n            };\n            return {\n                ...state,\n                newsData: [...state.newsData, newNews],\n            };\n        default:\n            return state;\n    }\n};\nexport const actions = {\n    addNewsAC: (newNewsText: string) => {\n        return {\n            type: 'ADD_NEWS',\n            newNewsText,\n        };\n    },\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nexport default newsReducer;\n","import axios from 'axios';\nimport { PhotosProfileType, ProfileType, UserType } from '../types/types';\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1,\n}\nexport enum ResultCodeForCaptcha {\n    CaptchaIsRequired = 10,\n}\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': 'abed2ab8-bf99-446c-a8e5-087db1f9035f',\n    },\n});\ntype GetUsersType = {\n    items: Array<UserType>;\n    totalCount: number;\n};\nexport const usersAPI = {\n    getUsers: async (pageNumber = 1, pageSize = 10): Promise<GetUsersType | undefined> => {\n        try {\n            const res = await instance.get(`users?page=${pageNumber}&count=${pageSize}`);\n            return res.data;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n\n    subscribe: async (userId: number): Promise<UpdateStatusType | undefined> => {\n        try {\n            const subscribeStatus = await instance.post(`follow/${userId}`);\n            return subscribeStatus.data.resultCode;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    unSubscribe: async (userId: number): Promise<UpdateStatusType | undefined> => {\n        try {\n            const subscribeStatus = await instance.delete(`follow/${userId}`);\n            return subscribeStatus.data.resultCode;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n};\ntype UpdateStatusType = {\n    resultCode: number;\n    messages: string[];\n    data: object;\n};\nexport const profileAPI = {\n    getUserProfile: async (userId = 2): Promise<ProfileType | undefined> => {\n        try {\n            const profile = await instance.get(`profile/${userId}`);\n            return profile.data;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    getStatus: async (userId = 2): Promise<string | undefined> => {\n        try {\n            const userStatus = await instance.get(`profile/status/${userId}`);\n            return userStatus.data;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    updateStatus: async (newStatus: string): Promise<UpdateStatusType | undefined> => {\n        try {\n            return await instance.put(`profile/status`, {\n                status: newStatus,\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    savePhoto: async (photoFile: File): Promise<PhotosProfileType | undefined> => {\n        try {\n            const formData = new FormData();\n            formData.append('image', photoFile);\n            return await instance.put(`profile/photo`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    saveProfileData: async (profileData: ProfileType): Promise<UpdateStatusType | undefined> => {\n        try {\n            return await instance.put(`profile`, {\n                ...profileData,\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    },\n};\ntype MeResponseDataType = {\n    id: number;\n    email: string;\n    login: string;\n};\ntype MeResponseType = {\n    data: MeResponseDataType;\n    resultCode: ResultCodesEnum;\n    messages: Array<string>;\n};\ntype LoginResponseType = {\n    data: { userId: number };\n    resultCode: ResultCodesEnum | ResultCodeForCaptcha;\n    messages: Array<string>;\n};\ntype GetCaptchaUrlType = {\n    url: string;\n};\nexport const authAPI = {\n    getAuthMe: async (): Promise<MeResponseType | undefined> => {\n        try {\n            const response = await instance.get<MeResponseType>(`auth/me`);\n            return response.data;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    login: async (\n        email: string,\n        password: string,\n        rememberMe = false,\n        captcha: null | string = null,\n    ): Promise<LoginResponseType | undefined> => {\n        try {\n            const response = await instance.post<LoginResponseType>(`/auth/login`, {\n                email,\n                password,\n                rememberMe,\n                captcha,\n            });\n            return response.data;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    logOut: async (): Promise<number | undefined> => {\n        try {\n            const response = await instance.delete<{ resultCode: number }>(`/auth/login`);\n            return response.data.resultCode;\n        } catch (e) {\n            console.log(e);\n        }\n    },\n};\nexport const securityAPI = {\n    getCaptcha: async (): Promise<GetCaptchaUrlType | undefined> => {\n        try {\n            return await instance.get(`security/get-captcha-url`);\n        } catch (e) {\n            console.log(e);\n        }\n    },\n};\n","module.exports = __webpack_public_path__ + \"static/media/maleAvatar.88fc734d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.c4474245.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3cHYR\",\"item\":\"Navbar_item__3Icao\",\"active\":\"Navbar_active__21R_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Login_formContainer__mHwUs\",\"formMainHeading\":\"Login_formMainHeading__3BUCI\"};","import React from 'react';\nimport s from './FormControls.module.scss';\nimport { Field, WrappedFieldInputProps, WrappedFieldMetaProps } from 'redux-form';\nimport { FieldValidatorType } from '../../../utils/validators/valiadators';\ntype FormControlPropsType = {\n    meta: WrappedFieldMetaProps;\n};\ntype TextAreaPropsType = {\n    input: WrappedFieldInputProps;\n    meta: WrappedFieldMetaProps;\n};\nexport type InputPropsType = {\n    input: WrappedFieldMetaProps;\n    meta: WrappedFieldMetaProps;\n};\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\n    const isError = touched && error;\n    return (\n        <div className={isError ? `${s.formControl} ${s.error}` : s.formControl}>\n            <div>{children}</div>\n            {isError ? <span>{error}</span> : null}\n        </div>\n    );\n};\n\nexport const Textarea: React.FC<TextAreaPropsType> = (props) => {\n    const { input, meta, ...restProps } = props;\n    return (\n        <FormControl {...props}>\n            <textarea {...input} {...restProps} />\n        </FormControl>\n    );\n};\nexport const Input: React.FC<InputPropsType> = (props) => {\n    const { input, meta, ...restProps } = props;\n    return (\n        <FormControl {...props}>\n            <input {...input} {...restProps} />\n        </FormControl>\n    );\n};\n\nexport function createField<FormKeysType extends string>(\n    placeholder: string | undefined,\n    name: FormKeysType,\n    validators: Array<FieldValidatorType>,\n    component: React.FC<InputPropsType> | React.Component | string,\n    props = {},\n    text = '',\n): React.ReactNode {\n    return (\n        <div>\n            <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props} />\n            {text}\n        </div>\n    );\n}\n","const initialState = [\n    {\n        id: 11351,\n        img:\n            'https://st2.depositphotos.com/9223672/12056/v/950/depositphotos_120568252-stock-illustration-female-face-avatar-round-flat.jpg',\n        name: 'Andrew',\n    },\n    {\n        id: 1233,\n        img:\n            'https://st2.depositphotos.com/9223672/12056/v/950/depositphotos_120568102-stock-illustration-female-face-avatar-round-flat.jpg',\n        name: 'Alisa',\n    },\n    {\n        id: 31312,\n        img:\n            'https://st2.depositphotos.com/9223672/12056/v/950/depositphotos_120568116-stock-illustration-female-face-avatar-round-flat.jpg',\n        name: 'Milka',\n    },\n] as Array<SidebarDataType>;\ntype SidebarDataType = {\n    id: number | null;\n    img: string;\n    name: string;\n};\n\nexport type InitialStateType = typeof initialState;\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\n    return state;\n};\nexport default sidebarReducer;\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(i => {\n        if (i[objPropName] === itemId) {\n            return {...i, ...newObjProps}\n        }\n        return i;\n    })\n};\n","import { usersAPI } from '../../api/api';\nimport { updateObjectInArray } from '../../utils/objectHelpers';\nimport { UserType } from '../../types/types';\nimport { AppStateType, InferActionsTypes } from '../reduxStore';\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nconst initialState = {\n    users: [] as Array<UserType>,\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentSelectedPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>, // Array o users ids\n};\nexport type InitialStateType = typeof initialState;\nconst userReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true }),\n            };\n        case 'UNFOLLOW':\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false }),\n            };\n        case 'SET_USERS':\n            return {\n                ...state,\n                users: action.users,\n            };\n        case 'SELECT_PAGE':\n            return {\n                ...state,\n                currentSelectedPage: action.pageNum,\n            };\n\n        case 'SET_TOTAL_USERS_COUNT':\n            return {\n                ...state,\n                totalUsersCount: action.totalUsersCount,\n            };\n        case 'TOGGLE_IS_FETCHING':\n            if (action.fetching) {\n                return {\n                    ...state,\n                    isFetching: true,\n                };\n            } else {\n                return {\n                    ...state,\n                    isFetching: false,\n                };\n            }\n        case 'TOGGLE_IS_FOLLOWING_IN_PROGRESS':\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter((id) => id !== action.userId),\n            };\n        default:\n            return state;\n    }\n};\n\nexport const actions = {\n    followAC: (userId: number) => ({ type: 'FOLLOW', userId } as const),\n    unfollowAC: (userId: number) => ({ type: 'UNFOLLOW', userId } as const),\n    setUsersAC: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\n    selectPageAC: (pageNumber: number) => ({ type: 'SELECT_PAGE', pageNum: pageNumber } as const),\n    setTotalUsersCountAC: (usersCount: number) =>\n        ({\n            type: 'SET_TOTAL_USERS_COUNT',\n            totalUsersCount: usersCount,\n        } as const),\n    toggleFetchingAC: (fetching: boolean) => ({ type: 'TOGGLE_IS_FETCHING', fetching } as const),\n    toggleFollowingProgressAC: (userId: number, isFetching: boolean) =>\n        ({\n            type: 'TOGGLE_IS_FOLLOWING_IN_PROGRESS',\n            userId,\n            isFetching,\n        } as const),\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\ntype GetStateType = () => AppStateType;\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\ntype ApiMethodSubscribeUnsubscribe = typeof usersAPI.subscribe | typeof usersAPI.unSubscribe;\nexport const requestUsersThunkCreator = (page = 1, pageSize = 4) => async (\n    dispatch: DispatchType,\n    getState: () => GetStateType,\n): Promise<void> => {\n    dispatch(actions.selectPageAC(page));\n    dispatch(actions.toggleFetchingAC(true));\n    try {\n        const users = await usersAPI.getUsers(page, pageSize);\n        if (users) {\n            dispatch(actions.toggleFetchingAC(false));\n            dispatch(actions.setUsersAC(users.items));\n            dispatch(actions.setTotalUsersCountAC(users.totalCount));\n        }\n    } catch (e) {\n        console.log(e);\n    }\n};\nconst _followUnfollowFlow = async (\n    dispatch: DispatchType,\n    userId: number,\n    apiMethod: ApiMethodSubscribeUnsubscribe,\n    actionCreator: (userId: number) => ActionsTypes,\n): Promise<void> => {\n    try {\n        dispatch(actions.toggleFollowingProgressAC(userId, true));\n        const statusCode = await apiMethod(userId);\n        if (statusCode?.resultCode === 0) dispatch(actionCreator(userId));\n        dispatch(actions.toggleFollowingProgressAC(userId, false));\n    } catch (e) {\n        console.log(e);\n    }\n};\n\nexport const followThunkCreator = (userId: number): ThunkType => {\n    return async (dispatch): Promise<void> => {\n        try {\n            await _followUnfollowFlow(dispatch, userId, usersAPI.subscribe.bind(usersAPI), actions.followAC);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n};\nexport const unFollowThunkCreator = (userId: number): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unSubscribe.bind(usersAPI), actions.unfollowAC);\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport default userReducer;\n","import { authAPI, ResultCodeForCaptcha, ResultCodesEnum, securityAPI } from '../../api/api';\nimport { stopSubmit } from 'redux-form';\nimport { AppStateType, InferActionsTypes } from '../reduxStore';\nimport { Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\n// eslint-disable-next-line @typescript-eslint/no-use-before-define\nexport type InitialStateType = typeof initialState;\nconst initialState = {\n    userId: null as number | null,\n    email: null as string | null,\n    login: null as string | null,\n    isAuth: false as boolean | null,\n    captchaUrl: null as string | null, // If null, then captcha is not required\n};\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'SET_USER_DATA':\n        case 'SET_CAPTCHA':\n        case 'CLEAR_USER_DATA':\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            return state;\n    }\n};\ntype GetStateType = () => AppStateType;\ntype DispatchType = Dispatch<ActionsTypes>;\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\n\nexport const actions = {\n    setAuthUserDataAC: (userId: number | null, email: string | null, login: string | null, isAuth: boolean | null) => {\n        return {\n            type: 'SET_USER_DATA',\n            payload: {\n                userId,\n                email,\n                login,\n                isAuth,\n            },\n        } as const;\n    },\n    clearLoginDataAC: () => {\n        return {\n            type: 'CLEAR_USER_DATA',\n            payload: null,\n        } as const;\n    },\n    setCaptcha: (captchaImg: string | null) => {\n        return {\n            type: 'SET_CAPTCHA',\n            payload: {\n                captchaImg,\n            },\n        } as const;\n    },\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nexport const authMeThunkCreator = (): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const authData = await authAPI.getAuthMe();\n        if (!authData || Object.keys(authData).length === ResultCodesEnum.Success)\n            throw new Error('You loggin is not pass');\n        const { id, email, login } = authData.data;\n        dispatch(actions.setAuthUserDataAC(id, email, login, true));\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const loginMeThunkCreator = (\n    email: string,\n    password: string,\n    rememberMe = false,\n    captcha: string | null,\n): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const res = await authAPI.login(email, password, rememberMe, captcha);\n        if (res) {\n            if (res.resultCode === ResultCodesEnum.Success) await dispatch(authMeThunkCreator());\n            // success, get auth data\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                if (res.resultCode === ResultCodeForCaptcha.CaptchaIsRequired) await dispatch(getAndSetCaptchaImage()); // error need captcha\n                const message = res.messages.length > 0 ? res.messages[0] : 'Some error';\n                dispatch(stopSubmit('login', { _error: message }) as any);\n            }\n        }\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const getAndSetCaptchaImage = (): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const response = await securityAPI.getCaptcha();\n        if (response) dispatch(actions.setCaptcha(response.url));\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const logoutMeThunkCreator = (): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const resCode = await authAPI.logOut();\n        if (resCode === 0) dispatch(actions.clearLoginDataAC());\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport default authReducer;\n","import { authMeThunkCreator } from './authReducer';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppStateType, InferActionsTypes } from '../reduxStore';\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\nexport type InitialStateType = {\n    initialized: boolean;\n};\nconst initialState: InitialStateType = {\n    initialized: false,\n};\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'INITIALIZED_SUCCESS':\n            return {\n                ...state,\n                initialized: true,\n            };\n        default:\n            return state;\n    }\n};\n\nexport const actions = {\n    initializingSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const),\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nexport const initializeApp = (): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        await dispatch(authMeThunkCreator());\n        dispatch(actions.initializingSuccess());\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport default appReducer;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport dialogsReducer from './reducers/dialogsReducer';\nimport newsReducer from './reducers/newsReducer';\nimport profileReducer from './reducers/profileReducer';\nimport sidebarReducer from './reducers/sidebarReducer';\nimport usersReducer from './reducers/usersReducer';\nimport authReducer from './reducers/authReducer';\nimport thunkMiddleware from 'redux-thunk';\nimport appReducer from './reducers/appReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n    dialogsPage: dialogsReducer,\n    newsPage: newsReducer,\n    profilePage: profileReducer,\n    sidebarData: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\nexport type AppStateType = ReturnType<typeof rootReducer>;\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\nexport type InferActionsTypes<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesTypes<T>>;\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n//window.__store__ = store;\nexport default store;\n","import React, { useState } from 'react';\nimport s from './Pagination.module.scss';\nimport cn from 'classnames';\n\ntype PropsType = {\n    onPageChanged: (pageNumber: number) => void;\n    currentSelectedPage: number;\n    totalItemsCount: number;\n    pageSize: number;\n    portionSize?: number;\n};\ntype PaginationElementPropsType = {\n    id: any;\n    onPageChanged: (page: number) => void;\n    currentSelectedPage: number;\n};\nconst Pagination: React.FC<PropsType> = ({\n    onPageChanged,\n    currentSelectedPage,\n    totalItemsCount,\n    pageSize,\n    portionSize = 10,\n}) => {\n    const pagesCount = Math.ceil(totalItemsCount / pageSize);\n    const pages: Array<number> = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i);\n    }\n    const portionCount = Math.ceil(pagesCount / portionSize);\n    // eslint-disable-next-line prefer-const\n    let [portionNumber, setPortionNumber] = useState(1);\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionPageNumber = portionNumber * portionSize;\n    return (\n        <div className={s.paginationBlock}>\n            <div className={cn(s.paginator)}>\n                {portionNumber > 1 && (\n                    <button\n                        onClick={(): void => {\n                            setPortionNumber(portionNumber - 1);\n                        }}\n                    >\n                        PREV\n                    </button>\n                )}\n                {pages\n                    .filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map((p) => {\n                        return (\n                            <PaginationElement\n                                id={p}\n                                key={p}\n                                onPageChanged={onPageChanged}\n                                currentSelectedPage={currentSelectedPage}\n                            />\n                        );\n                    })}\n                {portionCount > portionNumber && (\n                    <button\n                        onClick={(): void => {\n                            setPortionNumber(portionNumber + 1);\n                        }}\n                    >\n                        NEXT\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst PaginationElement: React.FC<PaginationElementPropsType> = ({ id, onPageChanged, currentSelectedPage }) => {\n    return (\n        <span\n            key={id}\n            id={id}\n            onClick={(): void => onPageChanged(id)}\n            className={cn({ [s.selectedPage]: currentSelectedPage === id }, s.pageNum)}\n        >\n            {id}\n        </span>\n    );\n};\nexport default Pagination;\n","import React from 'react';\nimport s from './User.module.scss';\nimport userPhoto from '../../../assets/images/maleAvatar.jpg';\nimport { NavLink } from 'react-router-dom';\nimport { PhotosProfileType } from '../../../types/types';\ntype PropsType = {\n    followed: boolean;\n    id: number;\n    name: string;\n    status: string;\n    photos: PhotosProfileType;\n    subscribe: (id: number) => void;\n    unSubscribe: (id: number) => void;\n    followingInProgress: Array<number>;\n};\nconst User: React.FC<PropsType> = ({\n    followed,\n    id,\n    name,\n    status,\n    photos,\n    subscribe,\n    unSubscribe,\n    followingInProgress,\n}) => {\n    return (\n        <div>\n            <span className={s.usersContainer}>\n                <span>\n                    <div>{name}</div>\n                    <div>{status}</div>\n                </span>\n                <span className={s.usersContainerItemRight}>\n                    <div>Russia</div>\n                    <div>Rostov on</div>\n                </span>\n            </span>\n            <span className={s.usersContainerItemLeft}>\n                <div>\n                    <NavLink to={`/profile/${id}`}>\n                        <img className={s.usersAvatarImg} src={photos.small ? photos.small : userPhoto} alt=\"avatar\" />\n                    </NavLink>\n                </div>\n                <div>\n                    {!followed ? (\n                        <button\n                            disabled={followingInProgress.some((userId) => userId === id)}\n                            onClick={(): void => {\n                                subscribe(id);\n                            }}\n                        >\n                            Follow\n                        </button>\n                    ) : (\n                        <button\n                            disabled={followingInProgress.some((userId) => userId === id)}\n                            onClick={(): void => {\n                                unSubscribe(id);\n                            }}\n                        >\n                            Unfollow\n                        </button>\n                    )}\n                </div>\n            </span>\n        </div>\n    );\n};\n\nexport default User;\n","import React, { FC } from 'react';\nimport Pagination from '../Common/Pagination/Pagination';\nimport User from './User/User';\nimport { UserType } from '../../types/types';\ntype PropsType = {\n    users: Array<UserType>;\n    subscribe: (id: number) => void;\n    unSubscribe: (id: number) => void;\n    totalUsersCount: number;\n    pageSize: number;\n    onPageChanged: (page: number) => void;\n    currentSelectedPage: number;\n    followingInProgress: Array<number>;\n};\nconst Users: FC<PropsType> = ({\n    users,\n    subscribe,\n    unSubscribe,\n    totalUsersCount,\n    pageSize,\n    onPageChanged,\n    currentSelectedPage,\n    followingInProgress,\n}) => {\n    return (\n        <div>\n            <Pagination\n                onPageChanged={onPageChanged}\n                currentSelectedPage={currentSelectedPage}\n                totalItemsCount={totalUsersCount}\n                pageSize={pageSize}\n            />\n            {users.map((u) => {\n                return (\n                    <User\n                        key={u.id}\n                        {...u}\n                        followingInProgress={followingInProgress}\n                        subscribe={subscribe}\n                        unSubscribe={unSubscribe}\n                        followed={false}\n                    />\n                );\n            })}\n        </div>\n    );\n};\nexport default Users;\n","import { createSelector } from 'reselect';\nimport { AppStateType } from '../reduxStore';\nexport const getUsersSelector = (state: AppStateType): typeof state.usersPage.users => {\n    return state.usersPage.users;\n};\n\nexport const getPageSize = (state: AppStateType): typeof state.usersPage.pageSize => {\n    return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = (state: AppStateType): typeof state.usersPage.totalUsersCount => {\n    return state.usersPage.totalUsersCount;\n};\nexport const getCurrentSelectedPage = (state: AppStateType): typeof state.usersPage.currentSelectedPage => {\n    return state.usersPage.currentSelectedPage;\n};\nexport const getIsFetching = (state: AppStateType): typeof state.usersPage.isFetching => {\n    return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = (state: AppStateType): typeof state.usersPage.followingInProgress => {\n    return state.usersPage.followingInProgress;\n};\nexport const getUsers = createSelector(getUsersSelector, getIsFetching, (users, isFetching): typeof users => {\n    return users;\n});\n\n// export const countSomethingDifficult= (state) => {\n//     //for... math... big array\n//     let count = 23;\n//     return count;\n//     return state.usersPage.followingInProgress;\n// };\n// export const getTempUsers= (state) => {\n//     return state.usersPage.users.filter(u => true //that are in temperedArray);\n// };\n","import React, { useEffect } from 'react';\nimport {\n    followThunkCreator,\n    unFollowThunkCreator,\n    requestUsersThunkCreator,\n    actions,\n} from '../../Redux/reducers/usersReducer';\n\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport Preloader from '../Common/Preloader/Preloader';\nimport {\n    getCurrentSelectedPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSelector,\n} from '../../Redux/selectors/usersSelectors';\nimport { UserType } from '../../types/types';\nimport { AppStateType } from '../../Redux/reduxStore';\n\ntype MapStatePropsType = {\n    currentSelectedPage: number;\n    pageSize: number;\n    isFetching: boolean;\n    totalUsersCount: number;\n    users: Array<UserType>;\n    followingInProgress: Array<number>;\n};\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void;\n    unfollow: (userId: number) => void;\n    getUsers: (currentSelectedPage: number, pageSize: number) => void;\n    onPageChanged: (page: number) => void;\n};\ntype OwnPropsType = {\n    pageTitle: string;\n};\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\nconst UsersContainer: React.FC<PropsType> = (props) => {\n    const onPageChanged = (pageNumber: number): void => {\n        props.getUsers(pageNumber, props.pageSize);\n    };\n    const onSubscribe = (userId: number): void => {\n        props.follow(userId);\n    };\n    const onUnSubscribe = (userId: number): void => {\n        props.unfollow(userId);\n    };\n    useEffect(() => {\n        props.getUsers(props.currentSelectedPage, props.pageSize);\n    }, [props.currentSelectedPage, props.pageSize]);\n\n    return (\n        <>\n            <h2>{props.pageTitle}</h2>\n            {props.isFetching ? <Preloader /> : null}\n            <Users\n                totalUsersCount={props.totalUsersCount}\n                currentSelectedPage={props.currentSelectedPage}\n                followingInProgress={props.followingInProgress}\n                pageSize={props.pageSize}\n                users={props.users}\n                onPageChanged={onPageChanged}\n                subscribe={onSubscribe}\n                unSubscribe={onUnSubscribe}\n            />\n        </>\n    );\n};\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: getUsersSelector(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentSelectedPage: getCurrentSelectedPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    };\n};\nconst usersContainers = connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\n    onPageChanged: actions.selectPageAC,\n    getUsers: requestUsersThunkCreator,\n    follow: followThunkCreator,\n    unfollow: unFollowThunkCreator,\n})(UsersContainer);\nexport default usersContainers;\n","import React from 'react';\nimport s from './Header.module.scss';\nimport { Link } from 'react-router-dom';\nexport type PropsType = {\n    isAuth: boolean;\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void;\n    logOut: () => void;\n};\nconst Header: React.FC<PropsType> = (props) => {\n    return (\n        <header className={s.header}>\n            <img src=\"https://logomaster.ai/static/media/gallery002.936afb9d.png\" alt=\"logo\" />\n            <div className={s.loginBlock}>\n                {!props.isAuth ? (\n                    <Link to={'/login'}>Login</Link>\n                ) : (\n                    <span>\n                        {props.login} <a onClick={props.logOut}>Logout</a>\n                    </span>\n                )}\n            </div>\n        </header>\n    );\n};\nexport default Header;\n","import React from 'react';\nimport Header from './Header';\nimport { logoutMeThunkCreator, loginMeThunkCreator } from '../../Redux/reducers/authReducer';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../Redux/reduxStore';\nimport { getIsAuth } from '../../Redux/selectors/authSelectors';\ntype PropsType = MapStateToPropsType & MapDispatchPropsType;\ntype MapStateToPropsType = {\n    isAuth: boolean;\n};\ntype MapDispatchPropsType = {\n    logOut: () => void;\n    login: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void;\n};\nconst HeaderContainer: React.FC<PropsType> = (props) => {\n    return <Header {...props} />;\n};\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({ isAuth: getIsAuth(state) });\nexport default connect<MapStateToPropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n    logOut: logoutMeThunkCreator,\n    login: loginMeThunkCreator,\n})(HeaderContainer);\n","import React from 'react';\nimport s from './LoginForm.module.scss';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { createField, Input } from '../../Common/FormsControls/FormsControls';\nimport { required } from '../../../utils/validators/valiadators';\ntype PropsType = {\n    captchaUrl: string;\n};\nexport type LoginFormValuesType = {\n    login: string;\n    password: string;\n    rememberMe: boolean;\n    captcha: string;\n};\nexport type LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>;\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, PropsType> & PropsType> = ({\n    handleSubmit,\n    error,\n    captchaUrl,\n}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={s.formContainer}>\n                {createField<LoginFormValuesTypeKeys>('Login', 'login', [required], Input)}\n                {createField<LoginFormValuesTypeKeys>('Password', 'password', [required], Input, { type: 'password' })}\n                {createField<LoginFormValuesTypeKeys>(\n                    undefined,\n                    'rememberMe',\n                    [],\n                    Input,\n                    { type: 'checkbox' },\n                    'remember me',\n                )}\n                {captchaUrl && (\n                    <div>\n                        {createField<LoginFormValuesTypeKeys>('Enter captcha', 'captcha', [required], Input, {\n                            type: 'text',\n                        })}\n                        <p>Please enter captcha</p>\n                        <img src={captchaUrl} alt=\"captcha\" />\n                    </div>\n                )}\n                {error && <div className={s.formSummaryError}>{error}</div>}\n                <div>\n                    <button>Login</button>\n                </div>\n            </div>\n        </form>\n    );\n};\nexport default reduxForm<LoginFormValuesType, PropsType>({\n    form: 'login',\n})(LoginForm);\n","import React from 'react';\nimport s from './Login.module.scss';\nimport LoginForm, { LoginFormValuesType } from './LoginForm/LoginForm';\nimport { Redirect } from 'react-router-dom';\ntype PropsType = {\n    loginMe: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void;\n    isAuth: boolean;\n    captchaUrl: string;\n};\nconst Login: React.FC<PropsType> = ({ loginMe, isAuth, captchaUrl }) => {\n    const onSubmit = (formData: LoginFormValuesType): void => {\n        const { login: email, password, rememberMe, captcha = '' } = formData;\n        loginMe(email, password, rememberMe, captcha);\n    };\n    if (isAuth) {\n        return <Redirect to=\"profile\" />;\n    }\n    return (\n        <div>\n            <h1 className={s.formMainHeading}>Login</h1>\n            <LoginForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { loginMeThunkCreator } from '../../Redux/reducers/authReducer';\nimport Login from './Login';\nimport { connect } from 'react-redux';\nimport { getCaptchaUrl, getIsAuth } from '../../Redux/selectors/authSelectors';\nimport { AppStateType } from '../../Redux/reduxStore';\ntype MapStateToProps = {\n    captchaUrl: string | null;\n    isAuth: boolean;\n};\ntype MapDispatchPropsType = {\n    loginMe: (email: string, password: string, rememberMe: boolean, captcha: string | null) => void;\n};\nconst LoginContainer: React.FC<MapStateToProps & MapDispatchPropsType> = (props) => {\n    return <Login loginMe={props.loginMe} captchaUrl={props.captchaUrl as string} isAuth={props.isAuth} />;\n};\n\nconst mapStateToProps = (state: AppStateType): MapStateToProps => ({\n    isAuth: getIsAuth(state.auth),\n    captchaUrl: getCaptchaUrl(state.auth),\n});\n\nexport default connect<MapStateToProps, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {\n    loginMe: loginMeThunkCreator,\n})(LoginContainer);\n","import React from 'react';\nimport s from './SidebarItem.module.scss'\nconst SidebarItem = ({name, img,id}) => {\n    return (\n            <li className={s.sideBarList}>\n                <img className={s.sideBarImg} src={img} id={id}/>\n                <div>{name}</div>\n            </li>\n    )\n}\nexport default SidebarItem;","import React from 'react';\nimport s from './Sidebar.module.scss'\nimport SidebarItem from \"./Sidebar-item/SidebarItem\";\nconst Sidebar = ({sidebarData}) => {\n    return (\n        <div>\n            <h1 className={s.sidebarMainHeading}>Friends</h1>\n            <div className={s.sidebarItemsContainer}>\n                {sidebarData.map((el) => {\n                    return <SidebarItem name={el.name} img={el.img} key={el.id} />\n                })}\n            </div>\n        </div>\n    )\n}\nexport default Sidebar;","import React from 'react';\nimport s from './Sidebar.module.scss'\nimport {connect} from \"react-redux\";\nimport Sidebar from \"./Sidebar\";\nimport {getSidebarData} from \"../../../Redux/selectors/sidebarSelectors\";\n\nconst mapStateToProps = ({sidebarData}) => ({sidebarData: getSidebarData(sidebarData)});\n\nconst SidebarContainer = connect(mapStateToProps, null)(Sidebar)\nexport default SidebarContainer;","import React from 'react';\nimport s from './Navbar.module.scss';\nimport {NavLink} from \"react-router-dom\";\nimport SidebarContainer from \"./Sidebar/SidebarContainer\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/dialogs\" activeClassName={s.active}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/news\" activeClassName={s.active}>News </NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\n            </div>\n\n            <div className={s.item}>\n                <NavLink to=\"/settings\" activeClassName={s.active}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <SidebarContainer/>\n            </div>\n        </nav>\n    )\n}\nexport default Navbar;","import React, {Suspense} from 'react';\nimport Preloader from \"../components/Common/Preloader/Preloader\";\n\nexport const WithSuspense = (Component) => {\n    return (props) => {\n        return (\n            <Suspense fallback={<Preloader/>}>\n                <Component {...props}/>\n            </Suspense>\n        )\n\n    }\n};","import React from 'react';\nimport s from './NotFound.module.scss';\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>Sorry this page is not exist: Error 404</h1>\n        </div>\n    )\n}\nexport default NotFound;","import React, { useEffect, lazy, FC } from 'react';\nimport './App.scss';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport store, { AppStateType } from './Redux/reduxStore';\nimport { compose } from 'redux';\nimport { connect, Provider } from 'react-redux';\nimport { Route, withRouter, HashRouter, Switch, Redirect } from 'react-router-dom';\nimport { initializeApp } from './Redux/reducers/appReducer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport { WithSuspense } from './HOC/withSuspense';\nimport { getInitialized } from './Redux/selectors/appSelectors';\nimport NotFound from './components/NotFound/NotFound';\n\nconst DialogsContainer = lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst NewsContainer = lazy(() => import('./components/News/NewsContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst Settings = lazy(() => import('./components/Settings/Settings'));\nconst Music = lazy(() => import('./components/Music/Music'));\ntype MapStatePropsType = {\n    initialized: boolean;\n};\ntype MapDispatchPropsType = {\n    initializeApp: () => void;\n};\ntype OwnPropsType = {};\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\n\nconst App: FC<PropsType> = ({ initializeApp, initialized }) => {\n    const catchAllUnhandledErrors = (promiseRejectectionEvent: PromiseRejectionEvent): void => {\n        alert('some error occured');\n        console.error(promiseRejectectionEvent);\n    };\n    useEffect(() => {\n        initializeApp();\n        window.addEventListener('unhandledrejection', catchAllUnhandledErrors);\n        return (): void => {\n            window.removeEventListener('unhandledrejection', catchAllUnhandledErrors);\n        };\n    }, []);\n\n    if (!initialized) return <Preloader />;\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer />\n            <Navbar />\n            <div className=\"app-wrapper-content\">\n                <Switch>\n                    <Route path=\"/dialogs\" render={WithSuspense(DialogsContainer)} />\n                    <Route path=\"/profile/:userId?\" render={WithSuspense(ProfileContainer)} />\n                    <Route path=\"/users\" render={(): React.ReactNode => <UsersContainer pageTitle={'Samurai'} />} />\n                    <Route path=\"/music\" render={WithSuspense(Music)} />\n                    <Route path=\"/news\" render={WithSuspense(NewsContainer)} />\n                    <Route path=\"/settings\" render={WithSuspense(Settings)} />\n                    <Route path=\"/login\" render={(): React.ReactNode => <LoginContainer />} />\n                    <Redirect from=\"/\" exact to=\"/profile/\" />\n                    <Route path=\"*\" render={(): React.ReactNode => <NotFound />} />\n                </Switch>\n            </div>\n        </div>\n    );\n};\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({ initialized: getInitialized(state.app) });\nconst AppContainer: React.FC = compose(\n    withRouter,\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\n        initializeApp,\n    }),\n)(App) as React.FC;\nconst SamuraiJSApp: React.FC = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    );\n};\nexport default SamuraiJSApp;\n","export const getInitialized = (app) => {\n    return app.initialized;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<SamuraiJSApp />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","import React from 'react';\nimport preloader from '../../../assets/images/preloader.svg';\nconst Preloader: React.FC = () => {\n    return <img src={preloader} alt=\" preloader \" />;\n};\nexport default Preloader;\n","export const getUserId = (auth) => {\n    return  auth.userId;\n};\nexport const getIsAuth = (auth) => {\n    return auth.userId;\n};\nexport const getCaptchaUrl = (auth) => {\n    return auth.captchaUrl\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__Wuj8v\",\"paginationBlock\":\"Pagination_paginationBlock__1XwSu\",\"pageNum\":\"Pagination_pageNum__27StT\",\"selectedPage\":\"Pagination_selectedPage__3-sdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"User_usersContainer__3qJ_I\",\"usersContainerItemRight\":\"User_usersContainerItemRight__2HfOq\",\"usersAvatarImg\":\"User_usersAvatarImg__2eAwm\",\"paginationBlock\":\"User_paginationBlock__23FUO\",\"pageNum\":\"User_pageNum__1bJYP\",\"selectedPage\":\"User_selectedPage__3jYB1\"};","export type FieldValidatorType = (value: string) => string | undefined;\nexport const required: FieldValidatorType = (value) => {\n    if (value) return undefined;\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value): string | undefined => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1nSru\",\"error\":\"FormControls_error__1ESZK\",\"formSummaryError\":\"FormControls_formSummaryError__17O59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarItemsContainer\":\"Sidebar_sidebarItemsContainer__3qGQ8\",\"sidebarMainHeading\":\"Sidebar_sidebarMainHeading__3YEkT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"loginBlock\":\"Header_loginBlock__3g_eP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"LoginForm_formContainer__3b5VO\",\"formMainHeading\":\"LoginForm_formMainHeading__3mWrZ\",\"formSummaryError\":\"LoginForm_formSummaryError__2dNse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBarImg\":\"SidebarItem_sideBarImg__1MUvK\",\"sideBarList\":\"SidebarItem_sideBarList__39XTP\"};","import { profileAPI } from '../../api/api';\nimport { stopSubmit } from 'redux-form';\nimport { PhotosProfileType, PostType, ProfileType } from '../../types/types';\nimport { ThunkAction } from 'redux-thunk';\nimport { AppStateType, InferActionsTypes } from '../reduxStore';\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>;\nconst initialState = {\n    posts: [\n        {\n            id: 113,\n            message: 'Hi how are you ?',\n            likesCount: 12,\n        },\n        {\n            id: 2123,\n            message: \"It's my first post\",\n            likesCount: 11,\n        },\n        {\n            id: 3221,\n            message: 'Blabla',\n            likesCount: 13,\n        },\n        {\n            id: 4332,\n            message: 'Dada',\n            likesCount: 15,\n        },\n    ] as Array<PostType>,\n    profileData: null as ProfileType | null,\n    profileUpdateStatusSuccess: null,\n    status: '',\n};\nexport type InitialStateType = typeof initialState;\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'ADD_POST':\n            const newProfile = {\n                id: Math.floor(Math.random() * 100),\n                message: action.newPost,\n                likesCount: Math.floor(Math.random() * 100),\n            };\n            return {\n                ...state,\n                posts: [...state.posts, newProfile],\n            };\n        case 'SET_USER_PROFILE':\n            return {\n                ...state,\n                profileData: action.profileData,\n            };\n        case 'SET_USER_STATUS':\n            return {\n                ...state,\n                status: action.status,\n            };\n        case 'DELETE_POST':\n            return {\n                ...state,\n                posts: state.posts.filter((p) => {\n                    return p.id !== action.id;\n                }),\n            };\n        case 'SAVE_PHOTO_SUCCESS':\n            return {\n                ...state,\n                profileData: { ...state.profileData, photos: action.photos } as ProfileType,\n            };\n        default:\n            return state;\n    }\n};\nexport const actions = {\n    addPostAC: (newPost: string) => ({ type: 'ADD_POST', newPost } as const),\n    setProfileAC: (profileData: ProfileType | undefined | null) =>\n        ({\n            type: 'SET_USER_PROFILE',\n            profileData: profileData as ProfileType,\n        } as const),\n    setUserStatusAC: (status: string) => ({ type: 'SET_USER_STATUS', status: status as string } as const),\n    savePhotoSuccess: (photos: PhotosProfileType) =>\n        ({\n            type: 'SAVE_PHOTO_SUCCESS',\n            photos,\n        } as const),\n    deletePostAC: (id: number) => ({ type: 'DELETE_POST', id } as const),\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nexport const getUserProfileThunkCreator = (userId: number): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const profile = await profileAPI.getUserProfile(userId);\n        dispatch(actions.setProfileAC(profile));\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const getUserStatusThunkCreator = (userId: number): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const status: string | undefined = await profileAPI.getStatus(userId);\n        dispatch(actions.setUserStatusAC(status as string));\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const updateStatusThunkCreator = (status: string): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const serverStatus = await profileAPI.updateStatus(status);\n        if (serverStatus) {\n            if (serverStatus.resultCode === 0) dispatch(actions.setUserStatusAC(status));\n        }\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const savePhotoThunkCreator = (file: File): ThunkType => async (dispatch): Promise<void> => {\n    try {\n        const response = await profileAPI.savePhoto(file);\n        if (response) dispatch(actions.savePhotoSuccess(response));\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport const saveProfileDataThunkCreator = (profileData: ProfileType): ThunkType => async (\n    dispatch,\n    getState,\n): Promise<void> => {\n    try {\n        const userId = getState().auth.userId;\n        const response = await profileAPI.saveProfileData(profileData);\n        if (response?.resultCode === 0) {\n            if (userId) await dispatch(getUserProfileThunkCreator(userId));\n        } else {\n            if (response?.data) {\n                const message = response?.data !== {} ? response.messages[0] : 'Some error';\n                dispatch(stopSubmit('edit-profile', { _error: message }) as any);\n                return Promise.reject(response.messages[0]);\n            }\n        }\n    } catch (e) {\n        console.log(e);\n    }\n};\nexport default profileReducer;\n","import { InferActionsTypes } from '../reduxStore';\n\ntype DialogType = {\n    id: number;\n    message: string;\n    likesCount: number;\n};\ntype MessageType = {\n    id: number;\n    message: string;\n    name: string;\n};\nconst initialState = {\n    messagesData: [\n        {\n            id: 121,\n            message: 'Ok!',\n            likesCount: 12,\n        },\n        {\n            id: 2221,\n            message: 'Sure!',\n            likesCount: 12,\n        },\n        {\n            id: 3121,\n            message: 'Hi dos',\n            likesCount: 12,\n        },\n        {\n            id: 4214,\n            message: 'Killer',\n            likesCount: 12,\n        },\n    ] as Array<DialogType>,\n    dialogsData: [\n        {\n            id: 1321,\n            name: 'Dimych',\n        },\n        {\n            id: 2311,\n            name: 'Alex',\n        },\n        {\n            id: 3432,\n            name: 'Anya',\n        },\n        {\n            id: 412,\n            name: 'Killer',\n        },\n    ] as Array<MessageType>,\n};\nexport type InitialStateType = typeof initialState;\nconst dialogsReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case 'ADD_DIALOG':\n            const newDialog = {\n                id: Math.floor(Math.random() * 100),\n                message: action.newMessage,\n                likesCount: Math.floor(Math.random() * 300),\n            };\n            return {\n                ...state,\n                messagesData: [...state.messagesData, newDialog],\n            };\n        default:\n            return state;\n    }\n};\nexport const actions = {\n    addDialogAC: (newMessage: string) => {\n        return {\n            type: 'ADD_DIALOG',\n            newMessage,\n        };\n    },\n};\ntype ActionsTypes = InferActionsTypes<typeof actions>;\n\nexport default dialogsReducer;\n"],"sourceRoot":""}