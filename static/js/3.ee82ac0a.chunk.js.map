{"version":3,"sources":["components/Profile/ProfileInfo/ProfileData/ProfileData.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsForm/MyPostsForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","Redux/selectors/profileSelectors.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","statusInput","setStatus","useEffect","toggleEditMode","isOwner","updateUserStatus","className","s","profileStatusBlock","onDoubleClick","profileInfoInput","autoFocus","onChange","e","target","value","onBlur","ContactsData","contactTitle","contactValue","contactsData","ProfileData","profileData","goToEditMode","descriptionBlock","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","c","key","reduxForm","form","handleSubmit","error","console","log","profileDataForm","onSubmit","formDataItems","formDataItemsInput","createField","Input","type","Textarea","contact","formSubmitBtn","style","formSummaryError","ProfileInfo","savePhoto","saveProfileData","profileUpdateStatusSuccess","Preloader","onMainPhotoSelected","files","length","file","profileAvatar","src","photos","large","avatar","imgMain","photosInputContainer","photosInput","accept","htmlFor","initialValues","profileFormData","then","catch","Post","message","name","item","maxLength10","maxLengthCreator","Field","component","placeholder","validate","required","MyPosts","React","memo","posts","addPost","postsElements","p","id","likesCount","postsBlock","postsBlockText","formData","textbox","connect","state","profilePage","Profile","MyPostsContainer","getProfileData","getStatus","getProfileUpdateStatus","compose","auth","autorizedUid","getUserId","isAuth","getIsAuth","getUserProfile","getUserProfileThunkCreator","getUserStatus","getUserStatusThunkCreator","updateStatusThunkCreator","savePhotoThunkCreator","saveProfileDataThunkCreator","withRouter","userId","parseInt","match","params","history","push","refreshProfile"],"mappings":"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","file":"static/js/3.ee82ac0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileData_descriptionBlock__3yskL\",\"imgMain\":\"ProfileData_imgMain__1MR6q\",\"profileInfoInput\":\"ProfileData_profileInfoInput__2rINX\",\"aboutMe\":\"ProfileData_aboutMe__13OZj\",\"contactsLists\":\"ProfileData_contactsLists__3tXCf\",\"contactsHeading\":\"ProfileData_contactsHeading__3roC_\",\"contactsData\":\"ProfileData_contactsData__2NQVb\",\"formSubmitBtn\":\"ProfileData_formSubmitBtn__2-c6l\",\"profileDataForm\":\"ProfileData_profileDataForm__2Q3iv\",\"formDataItems\":\"ProfileData_formDataItems__1HgwS\",\"formDataItemsInput\":\"ProfileData_formDataItemsInput__XmnVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__gOOQY\",\"imgMain\":\"ProfileInfo_imgMain__19Z2q\",\"profileInfoInput\":\"ProfileInfo_profileInfoInput__3YmSw\",\"aboutMe\":\"ProfileInfo_aboutMe__1JWq9\",\"profileAvatar\":\"ProfileInfo_profileAvatar__3f9ob\",\"photosInputContainer\":\"ProfileInfo_photosInputContainer__39sJ5\",\"photosInput\":\"ProfileInfo_photosInput__2YQVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileStatus_descriptionBlock__1debn\",\"profileStatusBlock\":\"ProfileStatus_profileStatusBlock__35DzV\",\"imgMain\":\"ProfileStatus_imgMain__31jQr\",\"profileInfoInput\":\"ProfileStatus_profileInfoInput__3_b7c\",\"aboutMe\":\"ProfileStatus_aboutMe__3jBhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cAL4\",\"postsBlockText\":\"MyPosts_postsBlockText__3e_AC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2yzXq\"};","import React, {useState, useEffect} from 'react';\nimport s from './ProfileStatus.module.scss';\n\nconst ProfileStatus = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [statusInput, setStatus] = useState(props.status);\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n    const toggleEditMode = () => {\n        if(!props.isOwner) return;\n        if(!editMode) {\n            setEditMode(true);\n        }\n        else {\n            setEditMode(false);\n            props.updateUserStatus(statusInput);\n        }\n    };\n    const updateLocalStatus = (e) => {\n        setStatus(e.target.value)\n    };\n    return (\n        <div className={s.profileStatusBlock}>\n            {!editMode &&\n            <div>\n                <span onDoubleClick={toggleEditMode}><b>Status:</b> {props.status}</span>\n            </div>\n            }\n            {editMode &&\n            <div className={s.profileInfoInput}>\n                <input autoFocus onChange={updateLocalStatus} onBlur={toggleEditMode} value={statusInput}/>\n            </div>\n            }\n        </div>\n    )\n};\n\n\nexport default ProfileStatus;","import React from 'react';\nimport s from './ProfileData.module.scss';\n\nconst ProfileData = ({profileData, isOwner, goToEditMode}) => {\n    return (\n        <div className={s.descriptionBlock}>\n            <h2>Profile Info</h2>\n            {isOwner && <div>\n                <button onClick={goToEditMode}>Edit information</button>\n            </div>}\n\n            <div>\n                <div>\n                    <b>Full name:</b> {profileData.fullName ? profileData.fullName : \"No info\"}\n                </div>\n                <div className={s.aboutMe}>\n                    <b>About me:</b> {profileData.aboutMe ? profileData.aboutMe : \"No info\"}\n                </div>\n                {profileData.lookingForAJob &&\n                <div className={s.aboutMe}>\n                    <div className={s.aboutMe}>\n                        <b>Job status:</b> Yes I'am looking for a job.\n                    </div>\n                    <b>My professional skills:</b>\n                    {\n                        profileData.lookingForAJobDescription ? profileData.lookingForAJobDescription : \"No one\"\n                    }\n                </div>\n                }\n                {!profileData.lookingForAJob &&\n                <div className={s.aboutMe}>\n                    <b>Job status:</b> I'am not looking for a job right now.\n                </div>\n                }\n                <div>\n                    <b>Contacts: {Object.keys(profileData.contacts)\n                        .map((c => {\n                            return <ContactsData key={c} contactTitle={c} contactValue={profileData.contacts[c]}/>\n                        }))}\n                    </b>\n                </div>\n            </div>\n\n        </div>\n    )\n};\nconst ContactsData = ({contactTitle, contactValue}) => {\n    return (\n        <div className={s.contactsData}><b>{contactTitle}</b>: {contactValue}</div>\n    )\n};\nexport default ProfileData;","import React from 'react';\nimport s from './ProfileData.module.scss';\nimport {createField, Input, Textarea} from \"../../../Common/FormsControls/FormsControls\";\nimport {reduxForm} from 'redux-form';\nimport style from \"../../../Common/FormsControls/FormControls.module.scss\";\n\nconst ProfileDataForm = ({handleSubmit, error, profileData}) => {\n    console.log(error);\n    return (\n        <form className={s.profileDataForm} onSubmit={handleSubmit}>\n            {error}\n            <h4>Profile Data Form</h4>\n\n            <div className={s.formDataItems}>\n                <label><b>Full name:</b> </label>\n                <div className={s.formDataItemsInput}>\n                    {createField(\"Enter full name\", \"fullName\", [], Input, {type: \"text\"})}\n                </div>\n            </div>\n            <div className={s.formDataItems}>\n                <label><b>About me:</b> </label>\n                <div className={s.formDataItemsInput}>\n                    {createField(\"Enter about me info\", \"aboutMe\", [], Input, {type: \"text\"})}\n                </div>\n            </div>\n            <div className={s.formDataItems}>\n                <label><b>Skills:</b> </label>\n                <div className={s.formDataItemsInput}>\n                    {createField(\"Enter you skills\", \"lookingForAJobDescription\", [], Textarea, {type: \"text\"})}\n                </div>\n            </div>\n            <div className={s.formDataItems}>\n                <label><b>Are you looking for a job ?</b> </label>\n                <div className={s.formDataItemsInput}>\n                    {createField(\"Enter job status\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n                </div>\n            </div>\n            <div>\n                <b>Contacts: {Object.keys(profileData.contacts)\n                    .map((key => {\n                        return <div key={key} className={s.contact}>\n                            <b>{key}:</b> <span>{createField(key, `contacts[${key}]`, [], Input)}</span>\n                        </div>\n                    }))}\n                </b>\n            </div>\n            <div className={s.formSubmitBtn}>\n                <button>Save profile data</button>\n            </div>\n            <div>\n                {error && <div className={style.formSummaryError}>\n                    {error}\n                </div>\n                }\n            </div>\n        </form>\n    )\n};\nexport default reduxForm({\n    form: 'edit-profile'\n})(ProfileDataForm);","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.scss';\nimport Preloader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\nimport avatar from \"../../../assets/images/maleAvatar.jpg\";\n\nconst ProfileInfo = ({profileData, updateUserStatus, status, isOwner, savePhoto, saveProfileData ,profileUpdateStatusSuccess}) => {\n    const [editMode, setEditMode] = useState(false);\n    if (!profileData) return <Preloader/>;\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            const file = e.target.files[0];\n            savePhoto(file);\n        }\n    };\n    const onProfileDataFormSubmit = (profileFormData) => {\n            saveProfileData(profileFormData).then(() => {\n                setEditMode(false);\n            }).catch(e => console.log(e));\n    };\n    return (\n        <div>\n            <div className={s.profileAvatar}>\n                <img src={profileData.photos.large ? profileData.photos.large : avatar} className={s.imgMain}/>\n                {isOwner &&\n                <span className={s.photosInputContainer}>\n                    <input className={s.photosInput} type=\"file\" onChange={onMainPhotoSelected} accept=\"image/*\"/>\n                    <label htmlFor=\"file\">Update photo</label>\n\n                </span>}\n            </div>\n            {editMode && <ProfileDataForm initialValues={profileData} onSubmit={onProfileDataFormSubmit} savePhoto={onMainPhotoSelected}\n                                          profileData={profileData}/>}\n            {!editMode &&\n            <ProfileData profileData={profileData} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\n\n            <ProfileStatus isOwner={isOwner} status={status} updateUserStatus={updateUserStatus}/>\n        </div>\n    )\n};\nexport default ProfileInfo;","import React from \"react\";\nimport s from \"./Post.module.scss\";\nconst Post = ({message,name}) => {\n  return (\n        <div className={s.item}>\n          <img src=\"https://f0.pngfuel.com/png/439/19/avatar-user-profile-icon-women-wear-frock-png-clip-art.png\" />\n          {name} - {message}\n          <div>\n            <span> like</span>\n            <span> dislike</span>\n          </div>\n        </div>\n  );\n};\nexport default Post;\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form'\nimport {maxLengthCreator, required} from \"../../../../utils/validators/valiadators\";\nimport {Textarea} from \"../../../Common/FormsControls/FormsControls\";\nconst maxLength10 = maxLengthCreator(10);\nconst MyPostsForm = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field component={Textarea} placeholder=\"Please Enter New Post\" name=\"textbox\" validate={[required, maxLength10]}/>\n            <div>\n                <button>Send Post</button>\n            </div>\n        </form>\n        )\n};\nexport default reduxForm({\n    form: 'mypost'\n})(MyPostsForm);","import React from 'react';\nimport s from './MyPosts.module.scss';\nimport Post from './Post/Post';\nimport MyPostsForm from \"./MyPostsForm/MyPostsForm\";\nconst MyPosts = React.memo(({posts,addPost }) => {\n    const postsElements = posts.map((p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />));\n    const onAddPost = (formData) => {\n        addPost(formData.textbox);\n    };\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My post</h3>\n            <div className={s.postsBlockText}>\n                <MyPostsForm onSubmit={onAddPost} />\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\nexport default MyPosts;","import React from 'react';\nimport {addPostAC as addPost} from \"../../../Redux/reducers/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = state => state.profilePage;\n\nexport default connect(mapStateToProps, {\n    addPost,\n})(MyPosts);","import React from 'react';\nimport s from './Profile.module.scss';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo profileUpdateStatusSuccess={props.profileUpdateStatusSuccess} saveProfileData={props.saveProfileData} savePhoto={props.savePhoto} isOwner={props.isOwner} profileData={props.profileData} updateUserStatus={props.updateUserStatus} status={props.status}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\nexport default Profile;","export const getProfileData = (profilePage) => {\n    return profilePage.profileData;\n};\nexport const getStatus = (profilePage) => {\n    return profilePage.status;\n};\nexport const getProfileUpdateStatus= (profilePage) => {\n    return profilePage.profileUpdateStatusSuccess;\n}","import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from 'react-router-dom';\nimport {\n    getUserProfileThunkCreator,\n    getUserStatusThunkCreator, savePhotoThunkCreator, saveProfileDataThunkCreator,\n    updateStatusThunkCreator\n} from \"../../Redux/reducers/profileReducer\";\nimport {compose} from \"redux\";\nimport {getProfileData, getProfileUpdateStatus, getStatus} from \"../../Redux/selectors/profileSelectors\";\nimport {getIsAuth, getUserId} from \"../../Redux/selectors/authSelectors\";\n\nconst ProfileContainer = (props) => {\n    const refreshProfile = () => {\n        let userId = parseInt(props.match.params.userId);\n        if (!userId) {\n            userId = props.autorizedUid;\n            if (!userId) {\n                props.history.push(\"/login\");\n            }\n        }\n        props.getUserProfile(userId);\n        props.getUserStatus(userId);\n    };\n    useEffect(() => {\n        refreshProfile();\n    }, [props.match.params.userId]);\n    return (\n        <Profile {...props} isOwner={!props.match.params.userId} />\n    )\n}\nconst mapStateToProps = ({profilePage, auth}) => {\n    return {\n        profileData: getProfileData(profilePage),\n        status: getStatus(profilePage),\n        profileUpdateStatusSuccess: getProfileUpdateStatus(profilePage),\n        autorizedUid: getUserId(auth),\n        isAuth: getIsAuth(auth),\n    }\n}\nexport default compose(\n    connect(mapStateToProps, {\n        getUserProfile: getUserProfileThunkCreator,\n        getUserStatus: getUserStatusThunkCreator,\n        updateUserStatus: updateStatusThunkCreator,\n        savePhoto: savePhotoThunkCreator,\n        saveProfileData: saveProfileDataThunkCreator\n    }),\n    withRouter,\n)(ProfileContainer);"],"sourceRoot":""}